#!/bin/sh

set -e # to exit as soon as there is an error

hollight_version=3.0.0 # for dependencies
hollight_commit=28e4aed
hol2dk_commit=5390465
lambdapi_commit=eeb280b9
coq_hollight_real_commit=ccbeb9d
ocaml_version=5.3.0
rocq_version=9.0.0

opam_version=2.3.0
dune_version=3.19.1
camlp5_version=8.03.05

hollight_file=Multivariate/make_complex.ml
base=`basename $hollight_file .ml`
root_path=HOLLight
jobs='-j32'

line() { echo '------------------------------------------------------------'; }

mkdir -p tmp
cd tmp

#usage: checkout_commit url commit
checkout_commit() {
    line
    d=`basename $1 .git`
    echo install $d ...
    git clone $1
    cd $d
    git checkout $2
    cd ..
}

create_opam_switch() {
    line
    echo create opam switch ...
    opam switch create . $ocaml_version
}

install_hollight_deps() {
    line
    echo install HOL-Light dependencies ...
    opam install -y --deps-only hol_light.$hollight_version
}

install_lambdapi() {
    checkout_commit https://github.com/Deducteam/lambdapi.git $lambdapi_commit
    cd lambdapi
    git checkout -b reproduce
    opam install -y .
    cd ..
}

install_rocq() {
    line
    echo install rocq ...
    opam install -y rocq-prover.$rocq_version
}

install_deps() {
    line
    echo install dependencies ...
    opam repo add rocq-released https://rocq-prover.org/opam/released
    opam install -y --deps-only ..
}

install_coq_hollight_real() {
    checkout_commit https://github.com/Deducteam/coq-hol-light-real-with-N $coq_hollight_real_commit
    cd coq-hol-light-real-with-N
    git checkout -b reproduce
    opam install -y .
    cd ..
}

install_hol2dk() {
    checkout_commit https://github.com/Deducteam/hol2dk.git $hol2dk_commit
    cd hol2dk
    dune build && dune install
    cd ..
}

install_hollight() {
    checkout_commit https://github.com/jrh13/hol-light.git $hollight_commit
    cd hol-light
    make
    cd ..
}

patch_hollight() {
    line
    echo patch hol-light ...
    hol2dk patch
}

dump_proofs() {
    line
    echo dump hol-light proofs ...
    cd hol-light
    hol2dk dump-simp $hollight_file
    cd ..
}

config_output_dir() {
    line
    echo configure output directory ...
    mkdir -p output
    cd output
    if test -f Makefile; then make $jobs clean-all; fi
    hol2dk config $hollight_file $root_path Stdlib.NArith.BinNat Stdlib.Reals.Reals HOLLight_Real_With_N.mappings ../../mappings.v ../../mappings.lp
    cd ..
}
    
translate_proofs() {
    line
    echo translate HOL-Light proofs to lambdapi and rocq ...
    cd output
    make split
    make $jobs lp
    make $jobs v
    make $jobs spec
    make $jobs rm-empty-deps
    cd ..
}

check_proofs() {
    line
    echo check proofs ...
    cd output
    make $jobs -k vo
    cd ..
}

remove_empty_modules() {
    sed -e "s/${base}_//g" \
        -e "/^Require Import ${root_path}\.theory_hol\.$/d" \
        -e "/^Require Import ${root_path}\.types\.$/d" \
        -e "/^Require Import ${root_path}\.axioms\.$/d" \
        -e "/^Axiom thm_HAS_INTEGRAL_TWIZZLE_INTERVAL /d" \
        -e 's/NUMERAL //g' \
        $1
}

create_and_check_opam_library() {
    line
    echo create opam library ...
    cd output
    make $jobs opam
    cd ..
    mkdir -p opam
    cd opam
    cp ../../Makefile ../../mappings.v .
    remove_empty_modules ../output/${base}_terms.v > terms.v
    remove_empty_modules ../output/${base}_opam.v > theorems.v
    sed -i -e 's/NUMERAL //g' -e 's/(N0)/N0/g' terms.v theorems.v
    make $jobs
    cd ..
}

compare_opam_file() {
    line
    echo compare $1 ...
    diff ../$1 opam/$1
}

compare_opam_files() {
    for f in terms.v theorems.v
    do
        compare_opam_file $f
    done
}

export HOLLIGHT_DIR=`pwd`/hol-light
export HOL2DK_DIR=`pwd`/hol2dk

stage() {
    if test -f STAGE
    then
        i=`head -n1 STAGE`
        i=`expr $i + 1`
    else
        i=1
    fi
    if test $i -eq $1
    then
        $2
        echo $1 > STAGE
    fi
}

if test -n "$1"
then
    expr $1 - 1 > STAGE
fi

stage 1 create_opam_switch
eval `opam env`
stage 2 install_hollight_deps
stage 3 install_lambdapi
stage 4 install_rocq
stage 5 install_deps
stage 6 install_coq_hollight_real
stage 7 install_hol2dk
stage 8 install_hollight
stage 9 patch_hollight
stage 10 dump_proofs
stage 11 config_output_dir
stage 12 create_and_check_opam_library
stage 13 compare_opam_files
stage 14 translate_proofs
stage 15 check_proofs
